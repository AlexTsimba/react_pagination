{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","numberOfPages","Math","ceil","pagesToRender","Array","from","keys","slice","className","classNames","disabled","href","onClick","map","page","active","items","to","numbers","n","push","getNumbers","App","useState","recordsPerPage","setRecordsPerPage","setCurrentPage","indexOfLastRecord","indexOfFirstRecord","currentRecords","length","id","value","onChange","event","target","itemsOnPage","htmlFor","record","ReactDOM","render","document","getElementById"],"mappings":"0MAUaA,EAAwB,SAAC,GAK/B,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAgBC,KAAKC,KAAKN,EAAQC,GAClCM,EAAgBC,MAAMC,KAAKD,MAAMJ,EAAgB,GAAGM,QAAQC,MAAM,GAcxE,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CAAEC,SAA0B,IAAhBZ,IAFd,SAKE,mBACE,UAAQ,WACRU,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBb,EACfc,QAxBW,WACbd,EAAc,GAChBC,EAAaD,EAAc,IAiBzB,oBAUDK,EAAcU,KAAI,SAAAC,GAAI,OACrB,oBAEEN,UAAWC,IACT,YACA,CAAEM,OAAQjB,IAAgBgB,IAJ9B,SAOE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMb,EAAae,IAJ9B,SAMGA,KAZEA,MAgBT,oBAAIN,UAAWC,IACb,YACA,CAAEC,SAAUZ,IAAgBE,IAF9B,SAKE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAK,QACL,gBAAeb,IAAgBE,EAC/BY,QAnDW,WACbd,EAAcE,GAChBD,EAAaD,EAAc,IA4CzB,wB,UClEFkB,ECLC,SAAoBX,EAAcY,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAId,EAAMc,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDFKG,CAAW,EAAG,IACzBR,KAAI,SAAAM,GAAC,qBAAYA,MAEPG,EAAU,WACrB,MAA4CC,mBAAS,GAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOzB,EAAP,KAAoB4B,EAApB,KAGMC,EAAoB7B,EAAc0B,EAClCI,EAAqBD,EAAoBH,EAEzCK,EAAiBb,EAAMT,MAAMqB,EACjCD,GASF,OACE,sBAAKnB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,SACG,eAAQV,EAAR,mBAA8B8B,EAAqB,GAAnD,aACOD,EAAoBX,EAAMc,OAASd,EAAMc,OAASH,GADzD,cAEQX,EAAMc,OAFd,OAKH,sBAAKtB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRuB,GAAG,kBACHvB,UAAU,eACVwB,MAAOR,EACPS,SAxBW,SAACC,GACpB,IAAQF,EAAUE,EAAMC,OAAhBH,MAERN,EAAe,GACfD,GAAmBO,IAeb,SA1Be,CAAC,EAAG,EAAG,GAAI,IAiCRnB,KAAI,SAAAuB,GAAW,OAC7B,wBAAQJ,MAAOI,EAAf,SACGA,GAD8BA,UAOvC,uBAAOC,QAAQ,kBAAkB7B,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACEZ,MAAOoB,EAAMc,OACbjC,QAAS2B,EACT1B,YAAaA,EACbC,aAAc2B,IAEhB,6BACGG,EAAehB,KAAI,SAAAyB,GAAM,OACxB,oBAAI,UAAQ,OAAZ,SAAiCA,GAATA,YE9DlCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d728de55.chunk.js","sourcesContent":["import React, { FC } from 'react';\nimport classNames from 'classnames';\n\ninterface Props {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: React.Dispatch<React.SetStateAction<number>>,\n}\n\nexport const Pagination: FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const numberOfPages = Math.ceil(total / perPage);\n  const pagesToRender = Array.from(Array(numberOfPages + 1).keys()).slice(1);\n\n  const handlePrev = () => {\n    if (currentPage > 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const handleNext = () => {\n    if (currentPage < numberOfPages) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames(\n        'page-item',\n        { disabled: currentPage === 1 },\n      )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={handlePrev}\n        >\n          «\n        </a>\n      </li>\n      {pagesToRender.map(page => (\n        <li\n          key={page}\n          className={classNames(\n            'page-item',\n            { active: currentPage === page },\n          )}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n      <li className={classNames(\n        'page-item',\n        { disabled: currentPage === numberOfPages },\n      )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === numberOfPages}\n          onClick={handleNext}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import { useState, FC } from 'react';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\nimport './App.css';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: FC = () => {\n  const [recordsPerPage, setRecordsPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const perPageOptions = [3, 5, 10, 20];\n  const indexOfLastRecord = currentPage * recordsPerPage;\n  const indexOfFirstRecord = indexOfLastRecord - recordsPerPage;\n\n  const currentRecords = items.slice(indexOfFirstRecord,\n    indexOfLastRecord);\n\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setCurrentPage(1);\n    setRecordsPerPage(+value);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${indexOfFirstRecord + 1}`\n        + ` - ${indexOfLastRecord > items.length ? items.length : indexOfLastRecord}`\n        + ` of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={recordsPerPage}\n            onChange={handleSelect}\n          >\n            {perPageOptions.map(itemsOnPage => (\n              <option value={itemsOnPage} key={itemsOnPage}>\n                {itemsOnPage}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={items.length}\n        perPage={recordsPerPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n      <ul>\n        {currentRecords.map(record => (\n          <li data-cy=\"item\" key={record}>{record}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}